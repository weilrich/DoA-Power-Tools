Version: 07182011b

Info
07062011b Info feature: Added the alliance name to the city title
07072011f Info feathre: Added Jason's UI modifications to show the wall status

Attack
07012011a Attack bug: found that scanMapBusy was being set to true when dat.done in butSearchNow(). Fixed
07012011a Attack feature: Added 'Clear' button and checkbox to allow users to clear the last attacked field in the target list. This allows the user to start at the top of the list again rather than wherever they last left off.
07012011a Attack bug: mapObject array had information in it when map is transferred causing some wrong map types to exist in the target list. I zero the array length before copying the new target list in butTransfer(). Fixed
07022011a Attack feature (private build only): Append alliance name to city/outpost target list
07032011f Attack bug: selected map name was set to 'Anthropus Camp' but was being checked as 'AntCamp' causing the radio button to never be selected. Fixed
07032011g Attack bug: butSearch did not transfer the map to the target. Fixed
07042011c Attack bug: troopsChanged would not allow more than 100000 troops to be sent at once. Changed to 120000. Fixed
07062011a Attack feature: adjust max march to correspond to the muster point level. Fixed

Train
07012011a Training feature: added third outpost and Firetroops. Guessed at new troop name: Djinn - will replace when I see what the actual name is
07012011a Training bug: Stonetroop (and Firetroop) training not supported through checkReqs. Will add when I can build them.
07032011i Training feature: Added a check for queue space before calling runJob to lighten the load on the server and reduce/eliminate turning auto-train off because of errors
07042011b Jobs now created as city "sets". A set will run if the city has enough queue space for all the troops in the job. For example, if you are training bds, lbms, minos, and ats the set is four troops and will be queued as soon as the city has 4 empty queue slots. It does waste some queue slots, but it prevents runaway training of a few troops. A better way would be to create job sets based on the number of queue slots available. In this case if you have 10 slots available and four troop types training the LCM would be 4*5*3 (60), 60/10 slots gives 6 jobs before the jobs repeat: 
job1: bd, lbm, mino, at 
job2: bd, lbm, mino, at
job3: bd, lbm (queue full)
job4: mino, at, bd, lbm
job5: mino, at, bd, lbm
job7: mino, at
07062011a Training bug: found one instance where I refreshed the browser and training lost the local array that was holding the current training job causing it to increment to the next level when that job had finished. Added a persistent storage variable to take care of that corner case.
07062011b Training feature: changed caps to start at zero (started a new realm for testing)
07072011f Training feature: Added Stonetroop check requirements
07072011f Training bug: Recheck was not working so training would not continue as needed items became available in short queue mode. Added call to Seed.fetchCity. Fixed
07072011g Training bug: calculation for displaying needed population was incorrect. Fixed
TBD: show individual time for completion in status with total time next to city name
07122100a Training feature: use the manifest in Seed, if available, to check requirements. If the manifest is not available, log a warning and use the defaults.
Note: items are not part of the requirements section, e.g. Respirators
07152011b Training bug: Renamed checkReqs to checkTrainReqs. Fixed
07152011b Training bug: Missed function to check caps when moving training to jobs tab. Fixed
07152011d Training bug: getItem now takes one parameter - the item type. Fixed
07182011b Training bug: setTrainEnable was not getting called in Jobs init(). Fixed.
07182011b Training feature: Added function refreshTrainButton
07182011b Training bug: doTrain was setting t.errorCount to zero, should be t.trainErrorCount. Fixed
07182001b Training bug: rslt.dat is null when DialogRetry uses doCancel. Checked for null, added setInterval for 3 minutes. Removed call to Seed.fetchSeed - only made things worse. Fixed
  
Auto-Collect
07042011b Was generating server errors spuriously because 'p' was not declared as a var before it was used. Fixed.

Build
07042011c Build feature: caps show current lowest levels unless the user sets them otherwise
07062011a Build feature: allow building to continue for jobs that have not reached their caps. As it is now, auto-build stops as soon as any cap is reached. Fixed
07072011b Build feature: rather than displaying 'BUILD ERROR', show the building type and error message
07072011b Build bug: changed the height of the feedback bar to show the entire message (was 17px, is 34px)
07072011f Build feature: Changed cap levels to start at zero
07072011f Build bug: Refreshing the browser can confuse the build such that it builds one building a level past the cap. Fixed
07092011a Build feature: Changed call to fetchCity to fetchSeed to improve stability on job completion
07122011b Build feature: Added checkReqs for building types
07132011a Build feature: use the manifest in Seed, if available, to check requirements. If the manifest is not available, log a warning and use the defaults.
07152011a Build bug: checkGoldReqs() was not checking available gold. Fixed
07152011a Build bug: buildTick was not referencing doRecheck correctely (t.doRecheck). Fixed
07182011b Build bug: setBuildEnable was not getting called in Jobs init(). Fixed
07182011b Build feature: Added function refreshBuildButton
07182011b Build bug: getBuildCap was not using the city index. Fixed

Research
07032011a Research feature: Implemented basic auto-research using research caps.
07032011i Research bug: says 'Nothing to do, disabling auto-build' - should say 'Nothing to do, disabling auto-research'. Fixed
07032011i Research bug: after submitting the research job, auto-research turns itself off. Fixed
07042011c Research feature: caps show current levels unless the user sets them otherwise
07062011a Research bug: feedback area showed the current research level rather than the one being researched. Fixed
07072011f Research feature: Changed research list to associative array to prevent translating types (e.g. Alloys <-> Mining)
07072011f Research feature: Changed cap levels to start at zero
07072011f Research bug: Alloys does not work. I'm guessing that the research name is not really Alloys (because it doesn't show up in Seeds.s.research). Fixed
07072011f Research bug: Refreshing the browser can confuse the research such that it researches one level past the cap. Pending
07072011g Research bug: parameter passed to getResearchIndex 'p' was UI translated causing the function to return a null value. Fixed
07092011a Research feature: Changed call to fetchCity to fetchSeed to improve stability on job completion
07132011a Research feature: use the manifest in Seed, if available, to check requirements. If the manifest is not available, log a warning and use the defaults.
Note: items are part of the requirements section (unlike training), e.g. Respirators
07142011a Research bug: Deleting a research job left the length of the array positive. Added check to see if the job itself was null. This prevented research from continuing after successfully completing a job. Fixed
07132011a Research feature: Call researchTick if research is enabled when the user changes the cap or selects a different research item. This allows research to continue without having to turn research off and then back on again. 
07152011a Research bug: researchTick was not referencing doRecheck correctely (t.doRecheck). Fixed
07182011b Research bug: setResearchEnable was not getting called in Jobs init(). Fixed
07182011b Research feature: Added function refreshResearchButton

Other
07012011a Added initializer to defaults for ptWinPos.
07032011i Changed setTimeout to setInterval in Research, Build, and Training - this will propagate to the rest of the code base over time
07042011c Added variable declarations to readMergeOptions to eliminate possible scope conflicts
07062011b Research feature: changed caps to start at zero (started a new realm for testing)
07072011a Modify all Ajax calls to accept Dragon Heart and user_id parameters, add initilizers to cattrs
07092011a Changed all feedback areas to text-align:left; padding: 2px 0px 2px 2px; height:34px because error text was running over the bottom
07112011a Replaced Seed with new version that reads manifest.json
07152011a Implemented Jobs tab
07152011c Changed MyAjaxRequest parameter for version 4 (from 3)
07152011a Added FireDragon items
07162011a Added LavaJaw, Volcanic Rune to FireDragon items
07182011a Added function makeid. Use makeid to create the CPopup window name.
07182011b Moved the train, build, and research timers to persistent storage
07182011b Changed divs in jobs so scrolling only affects the inputs
07182011b DialogRetry was using local variables to store data between calls. Moved variables into global scope. Fixed
07182011b Adjusted size of main CPopup window to fix the Kabam flash frame (subtracted 15 pixels from the height). 
